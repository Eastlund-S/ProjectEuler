"""Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2,
the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence
whose values do not exceed four million, find the
sum of the even-valued terms.

Answer: 4613732"""

import numpy as np


def main():
    # Initialise sequence
    x = 2
    sequence = [1, x]
    index = 1

    # Find values which are below 4000000
    while 1 == 1:
        x = sequence[index] + sequence[index - 1]
        if x > 4000000:
            break
        sequence.append(x)
        index += 1

    # Find and sum even numbers
    even_numbers = []
    for x in sequence:
        if x % 2 == 0:
            # print(x)  # don't want to read all these numbers!
            even_numbers.append(x)
    even_numbers = np.array(even_numbers)
    sum_of_even_numbers = even_numbers.sum()
    print('Sum: ' + str(sum_of_even_numbers))


if __name__ == '__main__':
    main()
