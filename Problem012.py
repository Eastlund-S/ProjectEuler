"""
The sequence of triangle numbers is generated by adding the natural
numbers. So the 7th triangle number would be
1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

2162160
842161320
"""

import numpy as np


def get_factors_of_n(n):
    factors = []

    for x in range(1, int(np.sqrt(n)) + 1):
        if n % x == 0:
            factors.append(x)
    return factors


def sigma(n):
    return sum(1 for d in range(1, n) if n % d == 0)


def main():
    current_triangle_number = 1
    current_natural_number = 2
    while sigma(current_triangle_number) < 500:
        print(sigma(current_triangle_number))
        current_triangle_number = current_triangle_number + current_natural_number
        current_natural_number += 1
    print('Triangle number is ' + str(current_triangle_number))


if __name__ == '__main__':
    main()
